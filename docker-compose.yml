version: '3.8'

# Production deployment configuration with Traefik
# Prerequisites:
#   1. Traefik reverse proxy running with external 'proxy' network
#   2. Copy .env.example to .env and configure all variables
#   3. Set DOMAIN_NAME in .env to your domain (e.g., garden.yourdomain.com)
#   4. Run initial setup: ./scripts/deploy.sh

services:
  db:
    image: postgres:16-alpine
    container_name: garden_planner_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-garden_planner}
      - POSTGRES_USER=${POSTGRES_USER:-garden_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:?POSTGRES_PASSWORD is required}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-garden_user}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - backend

  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: garden_planner_web
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn --bind 0.0.0.0:8000 --workers 3 --timeout 120 --access-logfile - --error-logfile - garden_planner.wsgi:application"
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    environment:
      - DJANGO_SETTINGS_MODULE=garden_planner.settings_production
      - SECRET_KEY=${SECRET_KEY:?SECRET_KEY is required}
      - DEBUG=${DEBUG:-False}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1}
      - DATABASE_URL=postgresql://${POSTGRES_USER:-garden_user}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB:-garden_planner}
      - POSTGRES_DB=${POSTGRES_DB:-garden_planner}
      - POSTGRES_USER=${POSTGRES_USER:-garden_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - SECURE_SSL_REDIRECT=${SECURE_SSL_REDIRECT:-True}
      - SESSION_COOKIE_SECURE=${SESSION_COOKIE_SECURE:-True}
      - CSRF_COOKIE_SECURE=${CSRF_COOKIE_SECURE:-True}
      - SECURE_HSTS_SECONDS=${SECURE_HSTS_SECONDS:-31536000}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/admin/login/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - backend
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.garden_planner.rule=Host(`${DOMAIN_NAME}`)"
      - "traefik.http.routers.garden_planner.entrypoints=websecure"
      - "traefik.http.routers.garden_planner.tls=true"
      - "traefik.http.routers.garden_planner.tls.certresolver=myresolver"
      - "traefik.http.services.garden_planner.loadbalancer.server.port=8000"
      - "traefik.http.services.garden_planner.loadbalancer.server.scheme=http"
      - "traefik.docker.network=proxy"

networks:
  backend:
    driver: bridge
  proxy:
    external: true

volumes:
  postgres_data:
  static_volume:
  media_volume:
